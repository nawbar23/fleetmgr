// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/add_channels.proto

#include "common/add_channels.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2fchannel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fchannel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Channel;
}  // namespace protobuf_common_2fchannel_2eproto
namespace com {
namespace fleetmgr {
namespace interfaces {
class AddChannelsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddChannelsRequest>
      _instance;
} _AddChannelsRequest_default_instance_;
class AddChannelsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddChannelsResponse>
      _instance;
} _AddChannelsResponse_default_instance_;
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com
namespace protobuf_common_2fadd_5fchannels_2eproto {
static void InitDefaultsAddChannelsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::fleetmgr::interfaces::_AddChannelsRequest_default_instance_;
    new (ptr) ::com::fleetmgr::interfaces::AddChannelsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::fleetmgr::interfaces::AddChannelsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddChannelsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddChannelsRequest}, {}};

static void InitDefaultsAddChannelsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::fleetmgr::interfaces::_AddChannelsResponse_default_instance_;
    new (ptr) ::com::fleetmgr::interfaces::AddChannelsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::fleetmgr::interfaces::AddChannelsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddChannelsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddChannelsResponse}, {
      &protobuf_common_2fchannel_2eproto::scc_info_Channel.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AddChannelsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddChannelsResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::AddChannelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::AddChannelsRequest, channelid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::AddChannelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::AddChannelsResponse, channel_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::fleetmgr::interfaces::AddChannelsRequest)},
  { 6, -1, sizeof(::com::fleetmgr::interfaces::AddChannelsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::fleetmgr::interfaces::_AddChannelsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::fleetmgr::interfaces::_AddChannelsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "common/add_channels.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031common/add_channels.proto\022\027com.fleetmg"
      "r.interfaces\032\024common/channel.proto\"\'\n\022Ad"
      "dChannelsRequest\022\021\n\tchannelId\030\001 \003(\003\"H\n\023A"
      "ddChannelsResponse\0221\n\007channel\030\001 \003(\0132 .co"
      "m.fleetmgr.interfaces.ChannelB\002P\001b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/add_channels.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2fchannel_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2fadd_5fchannels_2eproto
namespace com {
namespace fleetmgr {
namespace interfaces {

// ===================================================================

void AddChannelsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddChannelsRequest::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddChannelsRequest::AddChannelsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fadd_5fchannels_2eproto::scc_info_AddChannelsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fleetmgr.interfaces.AddChannelsRequest)
}
AddChannelsRequest::AddChannelsRequest(const AddChannelsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channelid_(from.channelid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.fleetmgr.interfaces.AddChannelsRequest)
}

void AddChannelsRequest::SharedCtor() {
}

AddChannelsRequest::~AddChannelsRequest() {
  // @@protoc_insertion_point(destructor:com.fleetmgr.interfaces.AddChannelsRequest)
  SharedDtor();
}

void AddChannelsRequest::SharedDtor() {
}

void AddChannelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddChannelsRequest::descriptor() {
  ::protobuf_common_2fadd_5fchannels_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fadd_5fchannels_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddChannelsRequest& AddChannelsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fadd_5fchannels_2eproto::scc_info_AddChannelsRequest.base);
  return *internal_default_instance();
}


void AddChannelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fleetmgr.interfaces.AddChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelid_.Clear();
  _internal_metadata_.Clear();
}

bool AddChannelsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fleetmgr.interfaces.AddChannelsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 channelId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_channelid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_channelid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fleetmgr.interfaces.AddChannelsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fleetmgr.interfaces.AddChannelsRequest)
  return false;
#undef DO_
}

void AddChannelsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fleetmgr.interfaces.AddChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 channelId = 1;
  if (this->channelid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _channelid_cached_byte_size_));
  }
  for (int i = 0, n = this->channelid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->channelid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fleetmgr.interfaces.AddChannelsRequest)
}

::google::protobuf::uint8* AddChannelsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fleetmgr.interfaces.AddChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 channelId = 1;
  if (this->channelid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _channelid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->channelid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fleetmgr.interfaces.AddChannelsRequest)
  return target;
}

size_t AddChannelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fleetmgr.interfaces.AddChannelsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 channelId = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->channelid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _channelid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddChannelsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fleetmgr.interfaces.AddChannelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddChannelsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddChannelsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fleetmgr.interfaces.AddChannelsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fleetmgr.interfaces.AddChannelsRequest)
    MergeFrom(*source);
  }
}

void AddChannelsRequest::MergeFrom(const AddChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fleetmgr.interfaces.AddChannelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channelid_.MergeFrom(from.channelid_);
}

void AddChannelsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fleetmgr.interfaces.AddChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddChannelsRequest::CopyFrom(const AddChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fleetmgr.interfaces.AddChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddChannelsRequest::IsInitialized() const {
  return true;
}

void AddChannelsRequest::Swap(AddChannelsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddChannelsRequest::InternalSwap(AddChannelsRequest* other) {
  using std::swap;
  channelid_.InternalSwap(&other->channelid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddChannelsRequest::GetMetadata() const {
  protobuf_common_2fadd_5fchannels_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fadd_5fchannels_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddChannelsResponse::InitAsDefaultInstance() {
}
void AddChannelsResponse::clear_channel() {
  channel_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddChannelsResponse::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddChannelsResponse::AddChannelsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fadd_5fchannels_2eproto::scc_info_AddChannelsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fleetmgr.interfaces.AddChannelsResponse)
}
AddChannelsResponse::AddChannelsResponse(const AddChannelsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_(from.channel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.fleetmgr.interfaces.AddChannelsResponse)
}

void AddChannelsResponse::SharedCtor() {
}

AddChannelsResponse::~AddChannelsResponse() {
  // @@protoc_insertion_point(destructor:com.fleetmgr.interfaces.AddChannelsResponse)
  SharedDtor();
}

void AddChannelsResponse::SharedDtor() {
}

void AddChannelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddChannelsResponse::descriptor() {
  ::protobuf_common_2fadd_5fchannels_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fadd_5fchannels_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddChannelsResponse& AddChannelsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fadd_5fchannels_2eproto::scc_info_AddChannelsResponse.base);
  return *internal_default_instance();
}


void AddChannelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fleetmgr.interfaces.AddChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.Clear();
  _internal_metadata_.Clear();
}

bool AddChannelsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fleetmgr.interfaces.AddChannelsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.fleetmgr.interfaces.Channel channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fleetmgr.interfaces.AddChannelsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fleetmgr.interfaces.AddChannelsResponse)
  return false;
#undef DO_
}

void AddChannelsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fleetmgr.interfaces.AddChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.fleetmgr.interfaces.Channel channel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channel(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fleetmgr.interfaces.AddChannelsResponse)
}

::google::protobuf::uint8* AddChannelsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fleetmgr.interfaces.AddChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.fleetmgr.interfaces.Channel channel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fleetmgr.interfaces.AddChannelsResponse)
  return target;
}

size_t AddChannelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fleetmgr.interfaces.AddChannelsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.fleetmgr.interfaces.Channel channel = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddChannelsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fleetmgr.interfaces.AddChannelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddChannelsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddChannelsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fleetmgr.interfaces.AddChannelsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fleetmgr.interfaces.AddChannelsResponse)
    MergeFrom(*source);
  }
}

void AddChannelsResponse::MergeFrom(const AddChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fleetmgr.interfaces.AddChannelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_.MergeFrom(from.channel_);
}

void AddChannelsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fleetmgr.interfaces.AddChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddChannelsResponse::CopyFrom(const AddChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fleetmgr.interfaces.AddChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddChannelsResponse::IsInitialized() const {
  return true;
}

void AddChannelsResponse::Swap(AddChannelsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddChannelsResponse::InternalSwap(AddChannelsResponse* other) {
  using std::swap;
  CastToBase(&channel_)->InternalSwap(CastToBase(&other->channel_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddChannelsResponse::GetMetadata() const {
  protobuf_common_2fadd_5fchannels_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fadd_5fchannels_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::fleetmgr::interfaces::AddChannelsRequest* Arena::CreateMaybeMessage< ::com::fleetmgr::interfaces::AddChannelsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::com::fleetmgr::interfaces::AddChannelsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::fleetmgr::interfaces::AddChannelsResponse* Arena::CreateMaybeMessage< ::com::fleetmgr::interfaces::AddChannelsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::com::fleetmgr::interfaces::AddChannelsResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
