// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/attach_channels.proto

#ifndef PROTOBUF_INCLUDED_common_2fattach_5fchannels_2eproto
#define PROTOBUF_INCLUDED_common_2fattach_5fchannels_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common/channel.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fattach_5fchannels_2eproto 

namespace protobuf_common_2fattach_5fchannels_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_common_2fattach_5fchannels_2eproto
namespace com {
namespace fleetmgr {
namespace interfaces {
class AttachChannelsRequest;
class AttachChannelsRequestDefaultTypeInternal;
extern AttachChannelsRequestDefaultTypeInternal _AttachChannelsRequest_default_instance_;
class ChannelsResponse;
class ChannelsResponseDefaultTypeInternal;
extern ChannelsResponseDefaultTypeInternal _ChannelsResponse_default_instance_;
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::fleetmgr::interfaces::AttachChannelsRequest* Arena::CreateMaybeMessage<::com::fleetmgr::interfaces::AttachChannelsRequest>(Arena*);
template<> ::com::fleetmgr::interfaces::ChannelsResponse* Arena::CreateMaybeMessage<::com::fleetmgr::interfaces::ChannelsResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace fleetmgr {
namespace interfaces {

// ===================================================================

class AttachChannelsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.fleetmgr.interfaces.AttachChannelsRequest) */ {
 public:
  AttachChannelsRequest();
  virtual ~AttachChannelsRequest();

  AttachChannelsRequest(const AttachChannelsRequest& from);

  inline AttachChannelsRequest& operator=(const AttachChannelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AttachChannelsRequest(AttachChannelsRequest&& from) noexcept
    : AttachChannelsRequest() {
    *this = ::std::move(from);
  }

  inline AttachChannelsRequest& operator=(AttachChannelsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttachChannelsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttachChannelsRequest* internal_default_instance() {
    return reinterpret_cast<const AttachChannelsRequest*>(
               &_AttachChannelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AttachChannelsRequest* other);
  friend void swap(AttachChannelsRequest& a, AttachChannelsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttachChannelsRequest* New() const final {
    return CreateMaybeMessage<AttachChannelsRequest>(NULL);
  }

  AttachChannelsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AttachChannelsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AttachChannelsRequest& from);
  void MergeFrom(const AttachChannelsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttachChannelsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.fleetmgr.interfaces.Channel channels = 1;
  int channels_size() const;
  void clear_channels();
  static const int kChannelsFieldNumber = 1;
  ::com::fleetmgr::interfaces::Channel* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel >*
      mutable_channels();
  const ::com::fleetmgr::interfaces::Channel& channels(int index) const;
  ::com::fleetmgr::interfaces::Channel* add_channels();
  const ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel >&
      channels() const;

  // @@protoc_insertion_point(class_scope:com.fleetmgr.interfaces.AttachChannelsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel > channels_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_common_2fattach_5fchannels_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChannelsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.fleetmgr.interfaces.ChannelsResponse) */ {
 public:
  ChannelsResponse();
  virtual ~ChannelsResponse();

  ChannelsResponse(const ChannelsResponse& from);

  inline ChannelsResponse& operator=(const ChannelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChannelsResponse(ChannelsResponse&& from) noexcept
    : ChannelsResponse() {
    *this = ::std::move(from);
  }

  inline ChannelsResponse& operator=(ChannelsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChannelsResponse* internal_default_instance() {
    return reinterpret_cast<const ChannelsResponse*>(
               &_ChannelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ChannelsResponse* other);
  friend void swap(ChannelsResponse& a, ChannelsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChannelsResponse* New() const final {
    return CreateMaybeMessage<ChannelsResponse>(NULL);
  }

  ChannelsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChannelsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChannelsResponse& from);
  void MergeFrom(const ChannelsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChannelsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 attachedChannels = 1;
  int attachedchannels_size() const;
  void clear_attachedchannels();
  static const int kAttachedChannelsFieldNumber = 1;
  ::google::protobuf::uint64 attachedchannels(int index) const;
  void set_attachedchannels(int index, ::google::protobuf::uint64 value);
  void add_attachedchannels(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      attachedchannels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_attachedchannels();

  // @@protoc_insertion_point(class_scope:com.fleetmgr.interfaces.ChannelsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > attachedchannels_;
  mutable int _attachedchannels_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_common_2fattach_5fchannels_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AttachChannelsRequest

// repeated .com.fleetmgr.interfaces.Channel channels = 1;
inline int AttachChannelsRequest::channels_size() const {
  return channels_.size();
}
inline ::com::fleetmgr::interfaces::Channel* AttachChannelsRequest::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:com.fleetmgr.interfaces.AttachChannelsRequest.channels)
  return channels_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel >*
AttachChannelsRequest::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:com.fleetmgr.interfaces.AttachChannelsRequest.channels)
  return &channels_;
}
inline const ::com::fleetmgr::interfaces::Channel& AttachChannelsRequest::channels(int index) const {
  // @@protoc_insertion_point(field_get:com.fleetmgr.interfaces.AttachChannelsRequest.channels)
  return channels_.Get(index);
}
inline ::com::fleetmgr::interfaces::Channel* AttachChannelsRequest::add_channels() {
  // @@protoc_insertion_point(field_add:com.fleetmgr.interfaces.AttachChannelsRequest.channels)
  return channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel >&
AttachChannelsRequest::channels() const {
  // @@protoc_insertion_point(field_list:com.fleetmgr.interfaces.AttachChannelsRequest.channels)
  return channels_;
}

// -------------------------------------------------------------------

// ChannelsResponse

// repeated uint64 attachedChannels = 1;
inline int ChannelsResponse::attachedchannels_size() const {
  return attachedchannels_.size();
}
inline void ChannelsResponse::clear_attachedchannels() {
  attachedchannels_.Clear();
}
inline ::google::protobuf::uint64 ChannelsResponse::attachedchannels(int index) const {
  // @@protoc_insertion_point(field_get:com.fleetmgr.interfaces.ChannelsResponse.attachedChannels)
  return attachedchannels_.Get(index);
}
inline void ChannelsResponse::set_attachedchannels(int index, ::google::protobuf::uint64 value) {
  attachedchannels_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.fleetmgr.interfaces.ChannelsResponse.attachedChannels)
}
inline void ChannelsResponse::add_attachedchannels(::google::protobuf::uint64 value) {
  attachedchannels_.Add(value);
  // @@protoc_insertion_point(field_add:com.fleetmgr.interfaces.ChannelsResponse.attachedChannels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChannelsResponse::attachedchannels() const {
  // @@protoc_insertion_point(field_list:com.fleetmgr.interfaces.ChannelsResponse.attachedChannels)
  return attachedchannels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChannelsResponse::mutable_attachedchannels() {
  // @@protoc_insertion_point(field_mutable_list:com.fleetmgr.interfaces.ChannelsResponse.attachedChannels)
  return &attachedchannels_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_common_2fattach_5fchannels_2eproto
