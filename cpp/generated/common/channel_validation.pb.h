// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/channel_validation.proto

#ifndef PROTOBUF_INCLUDED_common_2fchannel_5fvalidation_2eproto
#define PROTOBUF_INCLUDED_common_2fchannel_5fvalidation_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fchannel_5fvalidation_2eproto 

namespace protobuf_common_2fchannel_5fvalidation_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_common_2fchannel_5fvalidation_2eproto
namespace com {
namespace fleetmgr {
namespace interfaces {
class ValidateChannelRequest;
class ValidateChannelRequestDefaultTypeInternal;
extern ValidateChannelRequestDefaultTypeInternal _ValidateChannelRequest_default_instance_;
class ValidateChannelResponse;
class ValidateChannelResponseDefaultTypeInternal;
extern ValidateChannelResponseDefaultTypeInternal _ValidateChannelResponse_default_instance_;
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::fleetmgr::interfaces::ValidateChannelRequest* Arena::CreateMaybeMessage<::com::fleetmgr::interfaces::ValidateChannelRequest>(Arena*);
template<> ::com::fleetmgr::interfaces::ValidateChannelResponse* Arena::CreateMaybeMessage<::com::fleetmgr::interfaces::ValidateChannelResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace fleetmgr {
namespace interfaces {

enum Result {
  UNDEFINED = 0,
  VALIDATION_ACCEPTED = 1,
  VALIDATION_REJECTED = 2,
  Result_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Result_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Result_IsValid(int value);
const Result Result_MIN = UNDEFINED;
const Result Result_MAX = VALIDATION_REJECTED;
const int Result_ARRAYSIZE = Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* Result_descriptor();
inline const ::std::string& Result_Name(Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    Result_descriptor(), value);
}
inline bool Result_Parse(
    const ::std::string& name, Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Result>(
    Result_descriptor(), name, value);
}
// ===================================================================

class ValidateChannelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.fleetmgr.interfaces.ValidateChannelRequest) */ {
 public:
  ValidateChannelRequest();
  virtual ~ValidateChannelRequest();

  ValidateChannelRequest(const ValidateChannelRequest& from);

  inline ValidateChannelRequest& operator=(const ValidateChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidateChannelRequest(ValidateChannelRequest&& from) noexcept
    : ValidateChannelRequest() {
    *this = ::std::move(from);
  }

  inline ValidateChannelRequest& operator=(ValidateChannelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ValidateChannelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidateChannelRequest* internal_default_instance() {
    return reinterpret_cast<const ValidateChannelRequest*>(
               &_ValidateChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ValidateChannelRequest* other);
  friend void swap(ValidateChannelRequest& a, ValidateChannelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidateChannelRequest* New() const final {
    return CreateMaybeMessage<ValidateChannelRequest>(NULL);
  }

  ValidateChannelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ValidateChannelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ValidateChannelRequest& from);
  void MergeFrom(const ValidateChannelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidateChannelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:com.fleetmgr.interfaces.ValidateChannelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_common_2fchannel_5fvalidation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ValidateChannelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.fleetmgr.interfaces.ValidateChannelResponse) */ {
 public:
  ValidateChannelResponse();
  virtual ~ValidateChannelResponse();

  ValidateChannelResponse(const ValidateChannelResponse& from);

  inline ValidateChannelResponse& operator=(const ValidateChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidateChannelResponse(ValidateChannelResponse&& from) noexcept
    : ValidateChannelResponse() {
    *this = ::std::move(from);
  }

  inline ValidateChannelResponse& operator=(ValidateChannelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ValidateChannelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidateChannelResponse* internal_default_instance() {
    return reinterpret_cast<const ValidateChannelResponse*>(
               &_ValidateChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ValidateChannelResponse* other);
  friend void swap(ValidateChannelResponse& a, ValidateChannelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidateChannelResponse* New() const final {
    return CreateMaybeMessage<ValidateChannelResponse>(NULL);
  }

  ValidateChannelResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ValidateChannelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ValidateChannelResponse& from);
  void MergeFrom(const ValidateChannelResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidateChannelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .com.fleetmgr.interfaces.Result result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::com::fleetmgr::interfaces::Result result() const;
  void set_result(::com::fleetmgr::interfaces::Result value);

  // @@protoc_insertion_point(class_scope:com.fleetmgr.interfaces.ValidateChannelResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_common_2fchannel_5fvalidation_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ValidateChannelRequest

// string key = 1;
inline void ValidateChannelRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ValidateChannelRequest::key() const {
  // @@protoc_insertion_point(field_get:com.fleetmgr.interfaces.ValidateChannelRequest.key)
  return key_.GetNoArena();
}
inline void ValidateChannelRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fleetmgr.interfaces.ValidateChannelRequest.key)
}
#if LANG_CXX11
inline void ValidateChannelRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fleetmgr.interfaces.ValidateChannelRequest.key)
}
#endif
inline void ValidateChannelRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fleetmgr.interfaces.ValidateChannelRequest.key)
}
inline void ValidateChannelRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fleetmgr.interfaces.ValidateChannelRequest.key)
}
inline ::std::string* ValidateChannelRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.fleetmgr.interfaces.ValidateChannelRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValidateChannelRequest::release_key() {
  // @@protoc_insertion_point(field_release:com.fleetmgr.interfaces.ValidateChannelRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValidateChannelRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.fleetmgr.interfaces.ValidateChannelRequest.key)
}

// -------------------------------------------------------------------

// ValidateChannelResponse

// .com.fleetmgr.interfaces.Result result = 1;
inline void ValidateChannelResponse::clear_result() {
  result_ = 0;
}
inline ::com::fleetmgr::interfaces::Result ValidateChannelResponse::result() const {
  // @@protoc_insertion_point(field_get:com.fleetmgr.interfaces.ValidateChannelResponse.result)
  return static_cast< ::com::fleetmgr::interfaces::Result >(result_);
}
inline void ValidateChannelResponse::set_result(::com::fleetmgr::interfaces::Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:com.fleetmgr.interfaces.ValidateChannelResponse.result)
}

// string message = 2;
inline void ValidateChannelResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ValidateChannelResponse::message() const {
  // @@protoc_insertion_point(field_get:com.fleetmgr.interfaces.ValidateChannelResponse.message)
  return message_.GetNoArena();
}
inline void ValidateChannelResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fleetmgr.interfaces.ValidateChannelResponse.message)
}
#if LANG_CXX11
inline void ValidateChannelResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fleetmgr.interfaces.ValidateChannelResponse.message)
}
#endif
inline void ValidateChannelResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fleetmgr.interfaces.ValidateChannelResponse.message)
}
inline void ValidateChannelResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fleetmgr.interfaces.ValidateChannelResponse.message)
}
inline ::std::string* ValidateChannelResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:com.fleetmgr.interfaces.ValidateChannelResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValidateChannelResponse::release_message() {
  // @@protoc_insertion_point(field_release:com.fleetmgr.interfaces.ValidateChannelResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValidateChannelResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:com.fleetmgr.interfaces.ValidateChannelResponse.message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::fleetmgr::interfaces::Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::fleetmgr::interfaces::Result>() {
  return ::com::fleetmgr::interfaces::Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_common_2fchannel_5fvalidation_2eproto
