// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/add_channels.proto

#ifndef PROTOBUF_INCLUDED_common_2fadd_5fchannels_2eproto
#define PROTOBUF_INCLUDED_common_2fadd_5fchannels_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common/channel.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fadd_5fchannels_2eproto 

namespace protobuf_common_2fadd_5fchannels_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_common_2fadd_5fchannels_2eproto
namespace com {
namespace fleetmgr {
namespace interfaces {
class AddChannelsRequest;
class AddChannelsRequestDefaultTypeInternal;
extern AddChannelsRequestDefaultTypeInternal _AddChannelsRequest_default_instance_;
class AddChannelsResponse;
class AddChannelsResponseDefaultTypeInternal;
extern AddChannelsResponseDefaultTypeInternal _AddChannelsResponse_default_instance_;
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::fleetmgr::interfaces::AddChannelsRequest* Arena::CreateMaybeMessage<::com::fleetmgr::interfaces::AddChannelsRequest>(Arena*);
template<> ::com::fleetmgr::interfaces::AddChannelsResponse* Arena::CreateMaybeMessage<::com::fleetmgr::interfaces::AddChannelsResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace fleetmgr {
namespace interfaces {

// ===================================================================

class AddChannelsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.fleetmgr.interfaces.AddChannelsRequest) */ {
 public:
  AddChannelsRequest();
  virtual ~AddChannelsRequest();

  AddChannelsRequest(const AddChannelsRequest& from);

  inline AddChannelsRequest& operator=(const AddChannelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddChannelsRequest(AddChannelsRequest&& from) noexcept
    : AddChannelsRequest() {
    *this = ::std::move(from);
  }

  inline AddChannelsRequest& operator=(AddChannelsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddChannelsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddChannelsRequest* internal_default_instance() {
    return reinterpret_cast<const AddChannelsRequest*>(
               &_AddChannelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AddChannelsRequest* other);
  friend void swap(AddChannelsRequest& a, AddChannelsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddChannelsRequest* New() const final {
    return CreateMaybeMessage<AddChannelsRequest>(NULL);
  }

  AddChannelsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddChannelsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddChannelsRequest& from);
  void MergeFrom(const AddChannelsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddChannelsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 channelId = 1;
  int channelid_size() const;
  void clear_channelid();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int64 channelid(int index) const;
  void set_channelid(int index, ::google::protobuf::int64 value);
  void add_channelid(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      channelid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_channelid();

  // @@protoc_insertion_point(class_scope:com.fleetmgr.interfaces.AddChannelsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > channelid_;
  mutable int _channelid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_common_2fadd_5fchannels_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddChannelsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.fleetmgr.interfaces.AddChannelsResponse) */ {
 public:
  AddChannelsResponse();
  virtual ~AddChannelsResponse();

  AddChannelsResponse(const AddChannelsResponse& from);

  inline AddChannelsResponse& operator=(const AddChannelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddChannelsResponse(AddChannelsResponse&& from) noexcept
    : AddChannelsResponse() {
    *this = ::std::move(from);
  }

  inline AddChannelsResponse& operator=(AddChannelsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddChannelsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddChannelsResponse* internal_default_instance() {
    return reinterpret_cast<const AddChannelsResponse*>(
               &_AddChannelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AddChannelsResponse* other);
  friend void swap(AddChannelsResponse& a, AddChannelsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddChannelsResponse* New() const final {
    return CreateMaybeMessage<AddChannelsResponse>(NULL);
  }

  AddChannelsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddChannelsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddChannelsResponse& from);
  void MergeFrom(const AddChannelsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddChannelsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.fleetmgr.interfaces.Channel channel = 1;
  int channel_size() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::com::fleetmgr::interfaces::Channel* mutable_channel(int index);
  ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel >*
      mutable_channel();
  const ::com::fleetmgr::interfaces::Channel& channel(int index) const;
  ::com::fleetmgr::interfaces::Channel* add_channel();
  const ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel >&
      channel() const;

  // @@protoc_insertion_point(class_scope:com.fleetmgr.interfaces.AddChannelsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel > channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_common_2fadd_5fchannels_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddChannelsRequest

// repeated int64 channelId = 1;
inline int AddChannelsRequest::channelid_size() const {
  return channelid_.size();
}
inline void AddChannelsRequest::clear_channelid() {
  channelid_.Clear();
}
inline ::google::protobuf::int64 AddChannelsRequest::channelid(int index) const {
  // @@protoc_insertion_point(field_get:com.fleetmgr.interfaces.AddChannelsRequest.channelId)
  return channelid_.Get(index);
}
inline void AddChannelsRequest::set_channelid(int index, ::google::protobuf::int64 value) {
  channelid_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.fleetmgr.interfaces.AddChannelsRequest.channelId)
}
inline void AddChannelsRequest::add_channelid(::google::protobuf::int64 value) {
  channelid_.Add(value);
  // @@protoc_insertion_point(field_add:com.fleetmgr.interfaces.AddChannelsRequest.channelId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AddChannelsRequest::channelid() const {
  // @@protoc_insertion_point(field_list:com.fleetmgr.interfaces.AddChannelsRequest.channelId)
  return channelid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AddChannelsRequest::mutable_channelid() {
  // @@protoc_insertion_point(field_mutable_list:com.fleetmgr.interfaces.AddChannelsRequest.channelId)
  return &channelid_;
}

// -------------------------------------------------------------------

// AddChannelsResponse

// repeated .com.fleetmgr.interfaces.Channel channel = 1;
inline int AddChannelsResponse::channel_size() const {
  return channel_.size();
}
inline ::com::fleetmgr::interfaces::Channel* AddChannelsResponse::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:com.fleetmgr.interfaces.AddChannelsResponse.channel)
  return channel_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel >*
AddChannelsResponse::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:com.fleetmgr.interfaces.AddChannelsResponse.channel)
  return &channel_;
}
inline const ::com::fleetmgr::interfaces::Channel& AddChannelsResponse::channel(int index) const {
  // @@protoc_insertion_point(field_get:com.fleetmgr.interfaces.AddChannelsResponse.channel)
  return channel_.Get(index);
}
inline ::com::fleetmgr::interfaces::Channel* AddChannelsResponse::add_channel() {
  // @@protoc_insertion_point(field_add:com.fleetmgr.interfaces.AddChannelsResponse.channel)
  return channel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::fleetmgr::interfaces::Channel >&
AddChannelsResponse::channel() const {
  // @@protoc_insertion_point(field_list:com.fleetmgr.interfaces.AddChannelsResponse.channel)
  return channel_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_common_2fadd_5fchannels_2eproto
