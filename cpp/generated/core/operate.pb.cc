// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/operate.proto

#include "core/operate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace com {
namespace fleetmgr {
namespace interfaces {
class OperateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperateRequest>
      _instance;
} _OperateRequest_default_instance_;
class OperateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperateResponse>
      _instance;
} _OperateResponse_default_instance_;
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com
namespace protobuf_core_2foperate_2eproto {
static void InitDefaultsOperateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::fleetmgr::interfaces::_OperateRequest_default_instance_;
    new (ptr) ::com::fleetmgr::interfaces::OperateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::fleetmgr::interfaces::OperateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperateRequest}, {}};

static void InitDefaultsOperateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::fleetmgr::interfaces::_OperateResponse_default_instance_;
    new (ptr) ::com::fleetmgr::interfaces::OperateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::fleetmgr::interfaces::OperateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperateResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_OperateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperateResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::OperateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::OperateRequest, requesteddeviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::OperateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::OperateResponse, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::OperateResponse, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::OperateResponse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::fleetmgr::interfaces::OperateResponse, role_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::fleetmgr::interfaces::OperateRequest)},
  { 6, -1, sizeof(::com::fleetmgr::interfaces::OperateResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::fleetmgr::interfaces::_OperateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::fleetmgr::interfaces::_OperateResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "core/operate.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022core/operate.proto\022\027com.fleetmgr.inter"
      "faces\032\021common/role.proto\"+\n\016OperateReque"
      "st\022\031\n\021requestedDeviceId\030\001 \001(\004\"g\n\017Operate"
      "Response\022\014\n\004host\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\013\n\003"
      "key\030\003 \001(\t\022+\n\004role\030\004 \001(\0162\035.com.fleetmgr.i"
      "nterfaces.RoleB\002P\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "core/operate.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2frole_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_core_2foperate_2eproto
namespace com {
namespace fleetmgr {
namespace interfaces {

// ===================================================================

void OperateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperateRequest::kRequestedDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperateRequest::OperateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_core_2foperate_2eproto::scc_info_OperateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fleetmgr.interfaces.OperateRequest)
}
OperateRequest::OperateRequest(const OperateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requesteddeviceid_ = from.requesteddeviceid_;
  // @@protoc_insertion_point(copy_constructor:com.fleetmgr.interfaces.OperateRequest)
}

void OperateRequest::SharedCtor() {
  requesteddeviceid_ = GOOGLE_ULONGLONG(0);
}

OperateRequest::~OperateRequest() {
  // @@protoc_insertion_point(destructor:com.fleetmgr.interfaces.OperateRequest)
  SharedDtor();
}

void OperateRequest::SharedDtor() {
}

void OperateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperateRequest::descriptor() {
  ::protobuf_core_2foperate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_core_2foperate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperateRequest& OperateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_core_2foperate_2eproto::scc_info_OperateRequest.base);
  return *internal_default_instance();
}


void OperateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fleetmgr.interfaces.OperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requesteddeviceid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool OperateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fleetmgr.interfaces.OperateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 requestedDeviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requesteddeviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fleetmgr.interfaces.OperateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fleetmgr.interfaces.OperateRequest)
  return false;
#undef DO_
}

void OperateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fleetmgr.interfaces.OperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 requestedDeviceId = 1;
  if (this->requesteddeviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requesteddeviceid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fleetmgr.interfaces.OperateRequest)
}

::google::protobuf::uint8* OperateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fleetmgr.interfaces.OperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 requestedDeviceId = 1;
  if (this->requesteddeviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requesteddeviceid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fleetmgr.interfaces.OperateRequest)
  return target;
}

size_t OperateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fleetmgr.interfaces.OperateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 requestedDeviceId = 1;
  if (this->requesteddeviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requesteddeviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fleetmgr.interfaces.OperateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OperateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fleetmgr.interfaces.OperateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fleetmgr.interfaces.OperateRequest)
    MergeFrom(*source);
  }
}

void OperateRequest::MergeFrom(const OperateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fleetmgr.interfaces.OperateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requesteddeviceid() != 0) {
    set_requesteddeviceid(from.requesteddeviceid());
  }
}

void OperateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fleetmgr.interfaces.OperateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateRequest::CopyFrom(const OperateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fleetmgr.interfaces.OperateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateRequest::IsInitialized() const {
  return true;
}

void OperateRequest::Swap(OperateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperateRequest::InternalSwap(OperateRequest* other) {
  using std::swap;
  swap(requesteddeviceid_, other->requesteddeviceid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperateRequest::GetMetadata() const {
  protobuf_core_2foperate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_core_2foperate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperateResponse::kHostFieldNumber;
const int OperateResponse::kPortFieldNumber;
const int OperateResponse::kKeyFieldNumber;
const int OperateResponse::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperateResponse::OperateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_core_2foperate_2eproto::scc_info_OperateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fleetmgr.interfaces.OperateResponse)
}
OperateResponse::OperateResponse(const OperateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&port_)) + sizeof(role_));
  // @@protoc_insertion_point(copy_constructor:com.fleetmgr.interfaces.OperateResponse)
}

void OperateResponse::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&port_)) + sizeof(role_));
}

OperateResponse::~OperateResponse() {
  // @@protoc_insertion_point(destructor:com.fleetmgr.interfaces.OperateResponse)
  SharedDtor();
}

void OperateResponse::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperateResponse::descriptor() {
  ::protobuf_core_2foperate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_core_2foperate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperateResponse& OperateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_core_2foperate_2eproto::scc_info_OperateResponse.base);
  return *internal_default_instance();
}


void OperateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fleetmgr.interfaces.OperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&port_)) + sizeof(role_));
  _internal_metadata_.Clear();
}

bool OperateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fleetmgr.interfaces.OperateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fleetmgr.interfaces.OperateResponse.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fleetmgr.interfaces.OperateResponse.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fleetmgr.interfaces.Role role = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_role(static_cast< ::com::fleetmgr::interfaces::Role >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fleetmgr.interfaces.OperateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fleetmgr.interfaces.OperateResponse)
  return false;
#undef DO_
}

void OperateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fleetmgr.interfaces.OperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fleetmgr.interfaces.OperateResponse.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fleetmgr.interfaces.OperateResponse.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  // .com.fleetmgr.interfaces.Role role = 4;
  if (this->role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->role(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fleetmgr.interfaces.OperateResponse)
}

::google::protobuf::uint8* OperateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fleetmgr.interfaces.OperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fleetmgr.interfaces.OperateResponse.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fleetmgr.interfaces.OperateResponse.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // .com.fleetmgr.interfaces.Role role = 4;
  if (this->role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->role(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fleetmgr.interfaces.OperateResponse)
  return target;
}

size_t OperateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fleetmgr.interfaces.OperateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // string key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // .com.fleetmgr.interfaces.Role role = 4;
  if (this->role() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fleetmgr.interfaces.OperateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OperateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fleetmgr.interfaces.OperateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fleetmgr.interfaces.OperateResponse)
    MergeFrom(*source);
  }
}

void OperateResponse::MergeFrom(const OperateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fleetmgr.interfaces.OperateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.role() != 0) {
    set_role(from.role());
  }
}

void OperateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fleetmgr.interfaces.OperateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateResponse::CopyFrom(const OperateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fleetmgr.interfaces.OperateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateResponse::IsInitialized() const {
  return true;
}

void OperateResponse::Swap(OperateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperateResponse::InternalSwap(OperateResponse* other) {
  using std::swap;
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  swap(role_, other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperateResponse::GetMetadata() const {
  protobuf_core_2foperate_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_core_2foperate_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::fleetmgr::interfaces::OperateRequest* Arena::CreateMaybeMessage< ::com::fleetmgr::interfaces::OperateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::com::fleetmgr::interfaces::OperateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::fleetmgr::interfaces::OperateResponse* Arena::CreateMaybeMessage< ::com::fleetmgr::interfaces::OperateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::com::fleetmgr::interfaces::OperateResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
