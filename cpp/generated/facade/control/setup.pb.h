// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: facade/control/setup.proto

#ifndef PROTOBUF_INCLUDED_facade_2fcontrol_2fsetup_2eproto
#define PROTOBUF_INCLUDED_facade_2fcontrol_2fsetup_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_facade_2fcontrol_2fsetup_2eproto 

namespace protobuf_facade_2fcontrol_2fsetup_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_facade_2fcontrol_2fsetup_2eproto
namespace com {
namespace fleetmgr {
namespace interfaces {
namespace facade {
namespace control {
class SetupRequest;
class SetupRequestDefaultTypeInternal;
extern SetupRequestDefaultTypeInternal _SetupRequest_default_instance_;
class SetupResponse;
class SetupResponseDefaultTypeInternal;
extern SetupResponseDefaultTypeInternal _SetupResponse_default_instance_;
}  // namespace control
}  // namespace facade
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::fleetmgr::interfaces::facade::control::SetupRequest* Arena::CreateMaybeMessage<::com::fleetmgr::interfaces::facade::control::SetupRequest>(Arena*);
template<> ::com::fleetmgr::interfaces::facade::control::SetupResponse* Arena::CreateMaybeMessage<::com::fleetmgr::interfaces::facade::control::SetupResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace fleetmgr {
namespace interfaces {
namespace facade {
namespace control {

// ===================================================================

class SetupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.fleetmgr.interfaces.facade.control.SetupRequest) */ {
 public:
  SetupRequest();
  virtual ~SetupRequest();

  SetupRequest(const SetupRequest& from);

  inline SetupRequest& operator=(const SetupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetupRequest(SetupRequest&& from) noexcept
    : SetupRequest() {
    *this = ::std::move(from);
  }

  inline SetupRequest& operator=(SetupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupRequest* internal_default_instance() {
    return reinterpret_cast<const SetupRequest*>(
               &_SetupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SetupRequest* other);
  friend void swap(SetupRequest& a, SetupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetupRequest* New() const final {
    return CreateMaybeMessage<SetupRequest>(NULL);
  }

  SetupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetupRequest& from);
  void MergeFrom(const SetupRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:com.fleetmgr.interfaces.facade.control.SetupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_facade_2fcontrol_2fsetup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.fleetmgr.interfaces.facade.control.SetupResponse) */ {
 public:
  SetupResponse();
  virtual ~SetupResponse();

  SetupResponse(const SetupResponse& from);

  inline SetupResponse& operator=(const SetupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetupResponse(SetupResponse&& from) noexcept
    : SetupResponse() {
    *this = ::std::move(from);
  }

  inline SetupResponse& operator=(SetupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupResponse* internal_default_instance() {
    return reinterpret_cast<const SetupResponse*>(
               &_SetupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SetupResponse* other);
  friend void swap(SetupResponse& a, SetupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetupResponse* New() const final {
    return CreateMaybeMessage<SetupResponse>(NULL);
  }

  SetupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetupResponse& from);
  void MergeFrom(const SetupResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.fleetmgr.interfaces.facade.control.SetupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_facade_2fcontrol_2fsetup_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetupRequest

// string key = 1;
inline void SetupRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetupRequest::key() const {
  // @@protoc_insertion_point(field_get:com.fleetmgr.interfaces.facade.control.SetupRequest.key)
  return key_.GetNoArena();
}
inline void SetupRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fleetmgr.interfaces.facade.control.SetupRequest.key)
}
#if LANG_CXX11
inline void SetupRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fleetmgr.interfaces.facade.control.SetupRequest.key)
}
#endif
inline void SetupRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fleetmgr.interfaces.facade.control.SetupRequest.key)
}
inline void SetupRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fleetmgr.interfaces.facade.control.SetupRequest.key)
}
inline ::std::string* SetupRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.fleetmgr.interfaces.facade.control.SetupRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetupRequest::release_key() {
  // @@protoc_insertion_point(field_release:com.fleetmgr.interfaces.facade.control.SetupRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetupRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.fleetmgr.interfaces.facade.control.SetupRequest.key)
}

// -------------------------------------------------------------------

// SetupResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace control
}  // namespace facade
}  // namespace interfaces
}  // namespace fleetmgr
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_facade_2fcontrol_2fsetup_2eproto
